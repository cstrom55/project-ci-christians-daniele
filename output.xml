<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170531 12:25:13.600" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-christians-daniele" id="s1" name="Project-Ci-Christians-Daniele">
<suite source="/home/robot/workspace/project-ci-christians-daniele/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-christians-daniele/robotframework-backend/backendSuite.robot" id="s1-s1-s1" name="backendSuite">
<test id="s1-s1-s1-t1" name="Testcase1_GetAllBedrooms">
<kw name="Get all bedrooms" library="bedroomOperations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:13.915" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:13.916" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:13.916" starttime="20170531 12:25:13.915"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:13.919" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:13.920" starttime="20170531 12:25:13.917"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:13.921" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:13.921" starttime="20170531 12:25:13.920"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.039" starttime="20170531 12:25:13.922"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.040" level="INFO">${responseStatus} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.040" starttime="20170531 12:25:14.040"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${allBedrooms}</var>
</assign>
<msg timestamp="20170531 12:25:14.041" level="INFO">${allBedrooms} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:14.041" starttime="20170531 12:25:14.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Bedrooms:${allBedrooms}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.043" starttime="20170531 12:25:14.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.044" starttime="20170531 12:25:14.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.044" starttime="20170531 12:25:14.044"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.046" starttime="20170531 12:25:13.914"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.047" critical="yes" starttime="20170531 12:25:13.914"></status>
</test>
<test id="s1-s1-s1-t2" name="Testcase2_GetBedroomTotal">
<kw name="Get total number of bedrooms" library="bedroomOperations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.055" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.056" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.056" starttime="20170531 12:25:14.053"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.059" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:14.060" starttime="20170531 12:25:14.059"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.060" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:14.061" starttime="20170531 12:25:14.060"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.124" starttime="20170531 12:25:14.076"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.125" level="INFO">${responseStatus} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.125" starttime="20170531 12:25:14.125"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${totalBedrooms}</var>
</assign>
<msg timestamp="20170531 12:25:14.126" level="INFO">${totalBedrooms} = 6</msg>
<status status="PASS" endtime="20170531 12:25:14.126" starttime="20170531 12:25:14.126"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Total bedrooms:${totalBedrooms}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.127" starttime="20170531 12:25:14.126"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.128" starttime="20170531 12:25:14.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.129" starttime="20170531 12:25:14.128"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.129" starttime="20170531 12:25:14.052"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.130" critical="yes" starttime="20170531 12:25:14.051"></status>
</test>
<test id="s1-s1-s1-t3" name="Testcase3_PostNewBedroom">
<kw name="Create bedroom" library="bedroomOperations">
<kw name="Generate random bedroom" library="bedroomOperations">
<assign>
<var>${requestBody}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170531 12:25:14.162" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170531 12:25:14.167" starttime="20170531 12:25:14.151"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170531 12:25:14.174" level="INFO">${description} = GICVU</msg>
<status status="PASS" endtime="20170531 12:25:14.175" starttime="20170531 12:25:14.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170531 12:25:14.183" level="INFO">${floor} = 1</msg>
<status status="PASS" endtime="20170531 12:25:14.183" starttime="20170531 12:25:14.182"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>111</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170531 12:25:14.184" level="INFO">${number} = 111</msg>
<status status="PASS" endtime="20170531 12:25:14.185" starttime="20170531 12:25:14.184"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170531 12:25:14.186" level="INFO">${priceDaily} = 886</msg>
<status status="PASS" endtime="20170531 12:25:14.186" starttime="20170531 12:25:14.185"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=1</arg>
<arg>code=0</arg>
<arg>name=VACANT</arg>
</arguments>
<assign>
<var>${bedroomStatusIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.188" level="INFO">${bedroomStatusIdDictionary} = {u'id': u'1', u'code': u'0', u'name': u'VACANT'}</msg>
<status status="PASS" endtime="20170531 12:25:14.188" starttime="20170531 12:25:14.187"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=6</arg>
<arg>name=WHEELCHAIR ACCESS</arg>
</arguments>
<assign>
<var>${typeBedroomIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.189" level="INFO">${typeBedroomIdDictionary} = {u'id': u'6', u'name': u'WHEELCHAIR ACCESS'}</msg>
<status status="PASS" endtime="20170531 12:25:14.190" starttime="20170531 12:25:14.189"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${bedroomStatusIdDictionary}</arg>
<arg>typeBedroomId=${typeBedroomIdDictionary}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.192" level="INFO">${dictionary} = {u'id': u'100', u'description': u'GICVU', u'floor': u'1', u'number': u'111', u'priceDaily': u'886', u'bedroomStatusId': {u'code': u'0', u'id': u'1', u'name': u'VACANT'}, u'typeBedroomId': {u'id': u'6'...</msg>
<status status="PASS" endtime="20170531 12:25:14.192" starttime="20170531 12:25:14.190"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${bedroomJson}</var>
</assign>
<msg timestamp="20170531 12:25:14.194" level="INFO">${bedroomJson} = {"id": "100", "description": "GICVU", "floor": "1", "number": "111", "priceDaily": "886", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.194" starttime="20170531 12:25:14.193"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Random bedroom created</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.197" starttime="20170531 12:25:14.195"></status>
</kw>
<msg timestamp="20170531 12:25:14.197" level="INFO">${requestBody} = {"id": "100", "description": "GICVU", "floor": "1", "number": "111", "priceDaily": "886", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.198" starttime="20170531 12:25:14.139"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.201" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.201" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.202" starttime="20170531 12:25:14.198"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.203" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:14.203" starttime="20170531 12:25:14.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.204" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:14.205" starttime="20170531 12:25:14.204"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${requestBody}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.207" level="INFO">Request body set to "{"id": "100", "description": "GICVU", "floor": "1", "number": "111", "priceDaily": "886", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR ACCESS"}}".</msg>
<status status="PASS" endtime="20170531 12:25:14.209" starttime="20170531 12:25:14.205"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating a new bedroom${\n}DATA:${requestBody}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.211" starttime="20170531 12:25:14.210"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${createBedroomEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.508" starttime="20170531 12:25:14.212"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.509" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:14.509" starttime="20170531 12:25:14.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.510" starttime="20170531 12:25:14.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.511" starttime="20170531 12:25:14.510"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.511" starttime="20170531 12:25:14.137"></status>
</kw>
<kw name="Delete last bedroom" library="bedroomOperations">
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${lastBedroomID}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.514" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.514" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.515" starttime="20170531 12:25:14.513"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.545" starttime="20170531 12:25:14.515"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.547" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.547" starttime="20170531 12:25:14.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.548" starttime="20170531 12:25:14.547"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.548" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:14.548" starttime="20170531 12:25:14.548"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.560" starttime="20170531 12:25:14.548"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.561" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.561" starttime="20170531 12:25:14.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.564" starttime="20170531 12:25:14.564"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.568" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:14.568" starttime="20170531 12:25:14.567"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:14.573" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:14.573" starttime="20170531 12:25:14.572"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:14.574" level="INFO">${jsonId} = 9</msg>
<status status="PASS" endtime="20170531 12:25:14.575" starttime="20170531 12:25:14.573"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.580" starttime="20170531 12:25:14.576"></status>
</kw>
<msg timestamp="20170531 12:25:14.581" level="INFO">${lastBedroomID} = 9</msg>
<status status="PASS" endtime="20170531 12:25:14.581" starttime="20170531 12:25:14.512"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.583" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.583" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.584" starttime="20170531 12:25:14.582"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${deleteBedroomEndpoint}/${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.630" starttime="20170531 12:25:14.589"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.631" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:14.631" starttime="20170531 12:25:14.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.632" starttime="20170531 12:25:14.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.632" starttime="20170531 12:25:14.632"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Bedroom deleted, ID:${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.633" starttime="20170531 12:25:14.632"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.633" starttime="20170531 12:25:14.512"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.633" critical="yes" starttime="20170531 12:25:14.133"></status>
</test>
<test id="s1-s1-s1-t4" name="Testcase4_GetBedroomByID">
<kw name="Create bedroom" library="bedroomOperations">
<kw name="Generate random bedroom" library="bedroomOperations">
<assign>
<var>${requestBody}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170531 12:25:14.642" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170531 12:25:14.642" starttime="20170531 12:25:14.641"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170531 12:25:14.643" level="INFO">${description} = TTAAX</msg>
<status status="PASS" endtime="20170531 12:25:14.643" starttime="20170531 12:25:14.642"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170531 12:25:14.652" level="INFO">${floor} = 1</msg>
<status status="PASS" endtime="20170531 12:25:14.653" starttime="20170531 12:25:14.644"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>111</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170531 12:25:14.655" level="INFO">${number} = 111</msg>
<status status="PASS" endtime="20170531 12:25:14.655" starttime="20170531 12:25:14.654"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170531 12:25:14.657" level="INFO">${priceDaily} = 276</msg>
<status status="PASS" endtime="20170531 12:25:14.657" starttime="20170531 12:25:14.656"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=1</arg>
<arg>code=0</arg>
<arg>name=VACANT</arg>
</arguments>
<assign>
<var>${bedroomStatusIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.663" level="INFO">${bedroomStatusIdDictionary} = {u'id': u'1', u'code': u'0', u'name': u'VACANT'}</msg>
<status status="PASS" endtime="20170531 12:25:14.663" starttime="20170531 12:25:14.662"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=6</arg>
<arg>name=WHEELCHAIR ACCESS</arg>
</arguments>
<assign>
<var>${typeBedroomIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.664" level="INFO">${typeBedroomIdDictionary} = {u'id': u'6', u'name': u'WHEELCHAIR ACCESS'}</msg>
<status status="PASS" endtime="20170531 12:25:14.664" starttime="20170531 12:25:14.664"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${bedroomStatusIdDictionary}</arg>
<arg>typeBedroomId=${typeBedroomIdDictionary}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.668" level="INFO">${dictionary} = {u'id': u'100', u'description': u'TTAAX', u'floor': u'1', u'number': u'111', u'priceDaily': u'276', u'bedroomStatusId': {u'code': u'0', u'id': u'1', u'name': u'VACANT'}, u'typeBedroomId': {u'id': u'6'...</msg>
<status status="PASS" endtime="20170531 12:25:14.682" starttime="20170531 12:25:14.665"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${bedroomJson}</var>
</assign>
<msg timestamp="20170531 12:25:14.683" level="INFO">${bedroomJson} = {"id": "100", "description": "TTAAX", "floor": "1", "number": "111", "priceDaily": "276", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.683" starttime="20170531 12:25:14.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Random bedroom created</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.684" starttime="20170531 12:25:14.684"></status>
</kw>
<msg timestamp="20170531 12:25:14.687" level="INFO">${requestBody} = {"id": "100", "description": "TTAAX", "floor": "1", "number": "111", "priceDaily": "276", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.687" starttime="20170531 12:25:14.641"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.688" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.688" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.688" starttime="20170531 12:25:14.687"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.688" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:14.689" starttime="20170531 12:25:14.688"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.689" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:14.691" starttime="20170531 12:25:14.689"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${requestBody}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.692" level="INFO">Request body set to "{"id": "100", "description": "TTAAX", "floor": "1", "number": "111", "priceDaily": "276", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR ACCESS"}}".</msg>
<status status="PASS" endtime="20170531 12:25:14.692" starttime="20170531 12:25:14.692"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating a new bedroom${\n}DATA:${requestBody}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.693" starttime="20170531 12:25:14.693"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${createBedroomEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.713" starttime="20170531 12:25:14.693"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.714" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:14.714" starttime="20170531 12:25:14.714"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.716" starttime="20170531 12:25:14.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.717" starttime="20170531 12:25:14.716"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.717" starttime="20170531 12:25:14.640"></status>
</kw>
<kw name="Get bedroom by ID" library="bedroomOperations">
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${lastBedroomID}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.719" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.719" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.719" starttime="20170531 12:25:14.718"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.744" starttime="20170531 12:25:14.720"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.745" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.745" starttime="20170531 12:25:14.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.746" starttime="20170531 12:25:14.746"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.747" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:14.747" starttime="20170531 12:25:14.746"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.769" starttime="20170531 12:25:14.750"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.770" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.771" starttime="20170531 12:25:14.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.771" starttime="20170531 12:25:14.771"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.772" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:14.772" starttime="20170531 12:25:14.772"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:14.773" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:14.773" starttime="20170531 12:25:14.772"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:14.774" level="INFO">${jsonId} = 10</msg>
<status status="PASS" endtime="20170531 12:25:14.774" starttime="20170531 12:25:14.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.778" starttime="20170531 12:25:14.775"></status>
</kw>
<msg timestamp="20170531 12:25:14.779" level="INFO">${lastBedroomID} = 10</msg>
<status status="PASS" endtime="20170531 12:25:14.779" starttime="20170531 12:25:14.717"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.781" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.781" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.781" starttime="20170531 12:25:14.780"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomByIdEndpoint}/${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.796" starttime="20170531 12:25:14.782"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.797" level="INFO">${responseStatus} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.797" starttime="20170531 12:25:14.797"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${responseBody}</var>
</assign>
<msg timestamp="20170531 12:25:14.798" level="INFO">${responseBody} = {"id":10,"description":"TTAAX","floor":1,"number":111,"priceDaily":276,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}}</msg>
<status status="PASS" endtime="20170531 12:25:14.798" starttime="20170531 12:25:14.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.799" starttime="20170531 12:25:14.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.808" starttime="20170531 12:25:14.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseBody}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.816" starttime="20170531 12:25:14.808"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.816" starttime="20170531 12:25:14.717"></status>
</kw>
<kw name="Delete last bedroom" library="bedroomOperations">
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${lastBedroomID}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.818" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.818" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.818" starttime="20170531 12:25:14.817"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.830" starttime="20170531 12:25:14.818"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.831" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.831" starttime="20170531 12:25:14.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.832" starttime="20170531 12:25:14.832"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.833" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:14.833" starttime="20170531 12:25:14.833"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.840" starttime="20170531 12:25:14.833"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.840" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:14.841" starttime="20170531 12:25:14.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.841" starttime="20170531 12:25:14.841"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:14.842" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:14.842" starttime="20170531 12:25:14.841"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:14.843" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:14.843" starttime="20170531 12:25:14.842"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:14.843" level="INFO">${jsonId} = 10</msg>
<status status="PASS" endtime="20170531 12:25:14.844" starttime="20170531 12:25:14.843"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.852" starttime="20170531 12:25:14.844"></status>
</kw>
<msg timestamp="20170531 12:25:14.853" level="INFO">${lastBedroomID} = 10</msg>
<status status="PASS" endtime="20170531 12:25:14.854" starttime="20170531 12:25:14.817"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.855" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.855" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.856" starttime="20170531 12:25:14.854"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${deleteBedroomEndpoint}/${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.876" starttime="20170531 12:25:14.856"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:14.877" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:14.877" starttime="20170531 12:25:14.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.878" starttime="20170531 12:25:14.877"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.881" starttime="20170531 12:25:14.879"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Bedroom deleted, ID:${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.885" starttime="20170531 12:25:14.882"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.885" starttime="20170531 12:25:14.816"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:14.886" critical="yes" starttime="20170531 12:25:14.637"></status>
</test>
<test id="s1-s1-s1-t5" name="Testcase5_PutBedroom">
<kw name="Create bedroom" library="bedroomOperations">
<kw name="Generate random bedroom" library="bedroomOperations">
<assign>
<var>${requestBody}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170531 12:25:14.923" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170531 12:25:14.924" starttime="20170531 12:25:14.893"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170531 12:25:14.927" level="INFO">${description} = ODRTI</msg>
<status status="PASS" endtime="20170531 12:25:14.928" starttime="20170531 12:25:14.926"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170531 12:25:14.935" level="INFO">${floor} = 1</msg>
<status status="PASS" endtime="20170531 12:25:14.936" starttime="20170531 12:25:14.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>111</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170531 12:25:14.940" level="INFO">${number} = 111</msg>
<status status="PASS" endtime="20170531 12:25:14.941" starttime="20170531 12:25:14.938"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170531 12:25:14.946" level="INFO">${priceDaily} = 253</msg>
<status status="PASS" endtime="20170531 12:25:14.946" starttime="20170531 12:25:14.945"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=1</arg>
<arg>code=0</arg>
<arg>name=VACANT</arg>
</arguments>
<assign>
<var>${bedroomStatusIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.954" level="INFO">${bedroomStatusIdDictionary} = {u'id': u'1', u'code': u'0', u'name': u'VACANT'}</msg>
<status status="PASS" endtime="20170531 12:25:14.954" starttime="20170531 12:25:14.947"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=6</arg>
<arg>name=WHEELCHAIR ACCESS</arg>
</arguments>
<assign>
<var>${typeBedroomIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.956" level="INFO">${typeBedroomIdDictionary} = {u'id': u'6', u'name': u'WHEELCHAIR ACCESS'}</msg>
<status status="PASS" endtime="20170531 12:25:14.957" starttime="20170531 12:25:14.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${bedroomStatusIdDictionary}</arg>
<arg>typeBedroomId=${typeBedroomIdDictionary}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170531 12:25:14.958" level="INFO">${dictionary} = {u'id': u'100', u'description': u'ODRTI', u'floor': u'1', u'number': u'111', u'priceDaily': u'253', u'bedroomStatusId': {u'code': u'0', u'id': u'1', u'name': u'VACANT'}, u'typeBedroomId': {u'id': u'6'...</msg>
<status status="PASS" endtime="20170531 12:25:14.959" starttime="20170531 12:25:14.957"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${bedroomJson}</var>
</assign>
<msg timestamp="20170531 12:25:14.960" level="INFO">${bedroomJson} = {"id": "100", "description": "ODRTI", "floor": "1", "number": "111", "priceDaily": "253", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.962" starttime="20170531 12:25:14.959"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Random bedroom created</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.965" starttime="20170531 12:25:14.963"></status>
</kw>
<msg timestamp="20170531 12:25:14.966" level="INFO">${requestBody} = {"id": "100", "description": "ODRTI", "floor": "1", "number": "111", "priceDaily": "253", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAI...</msg>
<status status="PASS" endtime="20170531 12:25:14.966" starttime="20170531 12:25:14.889"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.967" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:14.968" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:14.968" starttime="20170531 12:25:14.967"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.969" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:14.970" starttime="20170531 12:25:14.968"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.971" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:14.971" starttime="20170531 12:25:14.970"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${requestBody}</arg>
</arguments>
<msg timestamp="20170531 12:25:14.972" level="INFO">Request body set to "{"id": "100", "description": "ODRTI", "floor": "1", "number": "111", "priceDaily": "253", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR ACCESS"}}".</msg>
<status status="PASS" endtime="20170531 12:25:14.973" starttime="20170531 12:25:14.972"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating a new bedroom${\n}DATA:${requestBody}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:14.974" starttime="20170531 12:25:14.973"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${createBedroomEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.033" starttime="20170531 12:25:14.975"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:15.034" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:15.035" starttime="20170531 12:25:15.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.041" starttime="20170531 12:25:15.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.045" starttime="20170531 12:25:15.041"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.046" starttime="20170531 12:25:14.888"></status>
</kw>
<kw name="Update bedroom" library="bedroomOperations">
<kw name="Generate random bedroom with last ID" library="bedroomOperations">
<assign>
<var>${requestBody}</var>
</assign>
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.059" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.059" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.059" starttime="20170531 12:25:15.058"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.103" starttime="20170531 12:25:15.060"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.104" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.104" starttime="20170531 12:25:15.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.105" starttime="20170531 12:25:15.104"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.105" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:15.106" starttime="20170531 12:25:15.105"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.125" starttime="20170531 12:25:15.106"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.126" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.127" starttime="20170531 12:25:15.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.128" starttime="20170531 12:25:15.127"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.129" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:15.130" starttime="20170531 12:25:15.128"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:15.133" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:15.133" starttime="20170531 12:25:15.132"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:15.134" level="INFO">${jsonId} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.134" starttime="20170531 12:25:15.133"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.135" starttime="20170531 12:25:15.135"></status>
</kw>
<msg timestamp="20170531 12:25:15.136" level="INFO">${id} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.136" starttime="20170531 12:25:15.057"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20170531 12:25:15.137" level="INFO">${description} = AXSIK</msg>
<status status="PASS" endtime="20170531 12:25:15.138" starttime="20170531 12:25:15.137"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${floor}</var>
</assign>
<msg timestamp="20170531 12:25:15.138" level="INFO">${floor} = 1</msg>
<status status="PASS" endtime="20170531 12:25:15.139" starttime="20170531 12:25:15.138"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>111</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20170531 12:25:15.139" level="INFO">${number} = 111</msg>
<status status="PASS" endtime="20170531 12:25:15.139" starttime="20170531 12:25:15.139"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>3</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${priceDaily}</var>
</assign>
<msg timestamp="20170531 12:25:15.140" level="INFO">${priceDaily} = 828</msg>
<status status="PASS" endtime="20170531 12:25:15.141" starttime="20170531 12:25:15.140"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=1</arg>
<arg>code=0</arg>
<arg>name=VACANT</arg>
</arguments>
<assign>
<var>${bedroomStatusIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:15.142" level="INFO">${bedroomStatusIdDictionary} = {u'id': u'1', u'code': u'0', u'name': u'VACANT'}</msg>
<status status="PASS" endtime="20170531 12:25:15.142" starttime="20170531 12:25:15.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=6</arg>
<arg>name=WHEELCHAIR ACCESS</arg>
</arguments>
<assign>
<var>${typeBedroomIdDictionary}</var>
</assign>
<msg timestamp="20170531 12:25:15.143" level="INFO">${typeBedroomIdDictionary} = {u'id': u'6', u'name': u'WHEELCHAIR ACCESS'}</msg>
<status status="PASS" endtime="20170531 12:25:15.143" starttime="20170531 12:25:15.142"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>description=${description}</arg>
<arg>floor=${floor}</arg>
<arg>number=${number}</arg>
<arg>priceDaily=${priceDaily}</arg>
<arg>bedroomStatusId=${bedroomStatusIdDictionary}</arg>
<arg>typeBedroomId=${typeBedroomIdDictionary}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170531 12:25:15.144" level="INFO">${dictionary} = {u'id': '11', u'description': u'AXSIK', u'floor': u'1', u'number': u'111', u'priceDaily': u'828', u'bedroomStatusId': {u'code': u'0', u'id': u'1', u'name': u'VACANT'}, u'typeBedroomId': {u'id': u'6', ...</msg>
<status status="PASS" endtime="20170531 12:25:15.145" starttime="20170531 12:25:15.143"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${bedroomJson}</var>
</assign>
<msg timestamp="20170531 12:25:15.146" level="INFO">${bedroomJson} = {"id": "11", "description": "AXSIK", "floor": "1", "number": "111", "priceDaily": "828", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR...</msg>
<status status="PASS" endtime="20170531 12:25:15.146" starttime="20170531 12:25:15.145"></status>
</kw>
<msg timestamp="20170531 12:25:15.146" level="INFO">${requestBody} = {"id": "11", "description": "AXSIK", "floor": "1", "number": "111", "priceDaily": "828", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR...</msg>
<status status="PASS" endtime="20170531 12:25:15.146" starttime="20170531 12:25:15.056"></status>
</kw>
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${lastBedroomID}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.148" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.148" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.148" starttime="20170531 12:25:15.147"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.160" starttime="20170531 12:25:15.148"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.162" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.162" starttime="20170531 12:25:15.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.163" starttime="20170531 12:25:15.162"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.163" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:15.163" starttime="20170531 12:25:15.163"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.176" starttime="20170531 12:25:15.164"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.177" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.177" starttime="20170531 12:25:15.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.179" starttime="20170531 12:25:15.178"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.181" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:15.181" starttime="20170531 12:25:15.180"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:15.183" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:15.184" starttime="20170531 12:25:15.182"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:15.185" level="INFO">${jsonId} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.186" starttime="20170531 12:25:15.184"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.187" starttime="20170531 12:25:15.186"></status>
</kw>
<msg timestamp="20170531 12:25:15.187" level="INFO">${lastBedroomID} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.188" starttime="20170531 12:25:15.147"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.189" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.193" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.195" starttime="20170531 12:25:15.188"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${headerContentJson}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.197" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170531 12:25:15.198" starttime="20170531 12:25:15.196"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${headerAcceptAll}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.199" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170531 12:25:15.200" starttime="20170531 12:25:15.198"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${requestBody}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.204" level="INFO">Request body set to "{"id": "11", "description": "AXSIK", "floor": "1", "number": "111", "priceDaily": "828", "bedroomStatusId": {"id": "1", "code": "0", "name": "VACANT"}, "typeBedroomId": {"id": "6", "name": "WHEELCHAIR ACCESS"}}".</msg>
<status status="PASS" endtime="20170531 12:25:15.205" starttime="20170531 12:25:15.202"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${updateBedroomEndpoint}/${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.242" starttime="20170531 12:25:15.206"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:15.244" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:15.245" starttime="20170531 12:25:15.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.246" starttime="20170531 12:25:15.245"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.248" starttime="20170531 12:25:15.247"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Bedroom updated, ID:${lastBedroomID}${\n}DATA:${requestBody}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.260" starttime="20170531 12:25:15.248"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.260" starttime="20170531 12:25:15.054"></status>
</kw>
<kw name="Delete last bedroom" library="bedroomOperations">
<kw name="Get ID of last bedroom" library="bedroomOperations">
<assign>
<var>${lastBedroomID}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.269" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.274" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.274" starttime="20170531 12:25:15.268"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllBedroomsEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.288" starttime="20170531 12:25:15.275"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.296" level="INFO">${responseStatusFirstRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.304" starttime="20170531 12:25:15.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusFirstRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.306" starttime="20170531 12:25:15.305"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodyFirstRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.310" level="INFO">${bodyFirstRequest} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170531 12:25:15.311" starttime="20170531 12:25:15.307"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getBedroomCounterEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.322" starttime="20170531 12:25:15.312"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatusSecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.349" level="INFO">${responseStatusSecondRequest} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.349" starttime="20170531 12:25:15.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatusSecondRequest}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.351" starttime="20170531 12:25:15.350"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bodySecondRequest}</var>
</assign>
<msg timestamp="20170531 12:25:15.352" level="INFO">${bodySecondRequest} = 7</msg>
<status status="PASS" endtime="20170531 12:25:15.352" starttime="20170531 12:25:15.352"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bodySecondRequest}-1</arg>
</arguments>
<assign>
<var>${lastIndex}</var>
</assign>
<msg timestamp="20170531 12:25:15.353" level="INFO">${lastIndex} = 6</msg>
<status status="PASS" endtime="20170531 12:25:15.354" starttime="20170531 12:25:15.353"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${bodyFirstRequest}</arg>
<arg>/${lastIndex}/id</arg>
</arguments>
<assign>
<var>${jsonId}</var>
</assign>
<msg timestamp="20170531 12:25:15.361" level="INFO">${jsonId} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.364" starttime="20170531 12:25:15.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${jsonId}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.367" starttime="20170531 12:25:15.366"></status>
</kw>
<msg timestamp="20170531 12:25:15.368" level="INFO">${lastBedroomID} = 11</msg>
<status status="PASS" endtime="20170531 12:25:15.369" starttime="20170531 12:25:15.263"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.370" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.371" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.371" starttime="20170531 12:25:15.369"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${deleteBedroomEndpoint}/${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.395" starttime="20170531 12:25:15.372"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${responseStatus}</var>
</assign>
<msg timestamp="20170531 12:25:15.398" level="INFO">${responseStatus} = 204 No Content</msg>
<status status="PASS" endtime="20170531 12:25:15.398" starttime="20170531 12:25:15.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${responseStatus}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.400" starttime="20170531 12:25:15.398"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${responseStatus}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.403" starttime="20170531 12:25:15.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Bedroom deleted, ID:${lastBedroomID}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.410" starttime="20170531 12:25:15.408"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.411" starttime="20170531 12:25:15.262"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.420" critical="yes" starttime="20170531 12:25:14.887"></status>
</test>
<test id="s1-s1-s1-t6" name="Testcase6_GetAllUsers">
<kw name="Get All Users" library="userOperations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${httpContext}</arg>
<arg>${httpVariable}</arg>
</arguments>
<msg timestamp="20170531 12:25:15.424" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170531 12:25:15.424" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170531 12:25:15.424" starttime="20170531 12:25:15.423"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${getAllUsersEndpoint}</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.445" starttime="20170531 12:25:15.426"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170531 12:25:15.446" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170531 12:25:15.446" starttime="20170531 12:25:15.445"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170531 12:25:15.447" level="INFO">${response_body} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170531 12:25:15.447" starttime="20170531 12:25:15.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170531 12:25:15.452" starttime="20170531 12:25:15.452"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.452" starttime="20170531 12:25:15.422"></status>
</kw>
<status status="PASS" endtime="20170531 12:25:15.453" critical="yes" starttime="20170531 12:25:15.421"></status>
</test>
<status status="PASS" endtime="20170531 12:25:15.453" starttime="20170531 12:25:13.789"></status>
</suite>
<status status="PASS" endtime="20170531 12:25:15.462" starttime="20170531 12:25:13.786"></status>
</suite>
<status status="PASS" endtime="20170531 12:25:15.475" starttime="20170531 12:25:13.725"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="6">Critical Tests</stat>
<stat fail="0" pass="6">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Christians-Daniele" pass="6">Project-Ci-Christians-Daniele</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="6">Project-Ci-Christians-Daniele.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="backendSuite" pass="6">Project-Ci-Christians-Daniele.Robotframework-Backend.backendSuite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
